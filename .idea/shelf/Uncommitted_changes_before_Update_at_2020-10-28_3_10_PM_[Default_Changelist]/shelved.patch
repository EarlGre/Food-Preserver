Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.food_preserver\"\r\n        minSdkVersion 27\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-firestore:21.7.1'\r\n    implementation 'com.google.firebase:firebase-database:19.5.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.1'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.1'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    implementation 'com.firebaseui:firebase-ui-firestore:6.3.0'\r\n    implementation \"com.google.firebase:firebase-firestore:21.7.1\"\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n    implementation 'com.facebook.shimmer:shimmer:0.5.0@aar'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 9bbfd79837bbea1354fa6862120488284301c041)
+++ app/build.gradle	(date 1603745663539)
@@ -36,6 +36,7 @@
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
     implementation 'com.google.firebase:firebase-firestore:21.7.1'
     implementation 'com.google.firebase:firebase-database:19.5.0'
+    implementation 'androidx.mediarouter:mediarouter:1.1.0'
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
Index: app/src/main/java/com/example/food_preserver/SearchActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.food_preserver;\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.widget.EditText;\r\nimport android.widget.Filterable;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.firebase.ui.firestore.FirestoreRecyclerOptions;\r\nimport com.google.android.gms.common.api.Api;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.xmlpull.v1.XmlPullParser;\r\nimport org.xmlpull.v1.XmlPullParserException;\r\nimport org.xmlpull.v1.XmlPullParserFactory;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SearchActivity extends AppCompatActivity {\r\n\r\n    RecyclerView recyclerView;\r\n    SearchView searchView;\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference FruitRef = db.collection(\"Food 2.0\");\r\n    private FoodAdapter adapter;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_search);\r\n\r\n        //request for get intent when search button is tapped\r\n        if (getIntent().hasExtra(\"com.example.test.SOMETHING\")) {\r\n            TextView tv =  (TextView) findViewById(R.id.textView);\r\n            String text = getIntent().getExtras().getString(\"com.example.test.SOMETHING\");\r\n        }\r\n\r\n        Query query = FruitRef.orderBy(\"priority\", Query.Direction.ASCENDING);\r\n        FirestoreRecyclerOptions<FoodItem> options = new FirestoreRecyclerOptions.Builder<FoodItem>()\r\n                .setQuery(query, FoodItem.class)\r\n                .build();\r\n\r\n\r\n        recyclerView = findViewById(R.id.recycler_search);\r\n        adapter = new FoodAdapter(options);\r\n        recyclerView.setAdapter(adapter);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        adapter.startListening();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        adapter.stopListening();\r\n    }\r\n\r\n    // override the transition going back in an activity\r\n    @Override\r\n    public void finish() {\r\n        super.finish();\r\n\r\n        overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right);\r\n    }\r\n\r\n    // search function\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.search_menu, menu);\r\n        MenuItem item = menu.findItem(R.id.action_search);\r\n        SearchView searchView = (SearchView) item.getActionView();\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n\r\n                return false;\r\n            }\r\n        });\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    //CollectionReference FoodRef = db.collection(\"Food\");\r\n\r\n    //global variables for recyclerview\r\n    /*\r\n    RecyclerView recyclerView;\r\n    SearchView searchView;\r\n    //List<Food> foodList;\r\n    ArrayList<FoodItem> list;\r\n    DatabaseReference ref;\r\n    private static final String TAG = \"FireStoreSearchActivity\";\r\n    private static final String FOOD = \"birds\";\r\n    private SearchAdapter searchAdapter;\r\n\r\n*/\r\n\r\n//    Food foods;\r\n//    int imageURI;\r\n//    int vegetable, fruit, meat;\r\n/*\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_search);\r\n\r\n        ref = FirebaseDatabase.getInstance().getReference().child(FOOD);\r\n        recyclerView = findViewById(R.id.recycler_search);\r\n        searchView = findViewById(R.id.food_name);\r\n\r\n */\r\n\r\n//        RecyclerView recyclerView = findViewById(R.id.recycler_search);\r\n//        recyclerView.setLayoutManager(new GridLayoutManager(this, 2));\r\n//\r\n//        Query query = db.collection(FOOD)\r\n//                .orderBy(\"priority\", Query.Direction.ASCENDING);\r\n//        FirestoreRecyclerOptions<FoodItem> options = new FirestoreRecyclerOptions.Builder<FoodItem>()\r\n//                .setQuery(query, FoodItem.class)\r\n//                .build();\r\n//\r\n//        mAdapter = new FoodAdapter(options);\r\n//        recyclerView.setAdapter(mAdapter);\r\n//\r\n//        EditText editText = findViewById(R.id.food_name);\r\n//        editText.addTextChangedListener(new TextWatcher() {\r\n//            @Override\r\n//            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void afterTextChanged(Editable s) {\r\n//                Log.d(TAG, \"Searchbox has changed to\" + s.toString());\r\n//            }\r\n//        });\r\n\r\n                //to import the data from josn to firestore\r\n//        try {\r\n//            // get JSONObject from JSON file\r\n//            JSONObject obj = new JSONObject(loadJSONFromAsset());\r\n//            // fetch JSONArray named users\r\n//            JSONArray foodArray = obj.getJSONArray(\"users\");\r\n//            // implement for loop for getting users list data\r\n//            for (int i = 0; i < foodArray.length(); i++) {\r\n//                // create a JSONObject for fetching single user data\r\n//                JSONObject userDetail = foodArray.getJSONObject(i);\r\n//                // fetch email and name and store it in arraylist\r\n//                personNames.add(userDetail.getString(\"name\"));\r\n//                emailIds.add(userDetail.getString(\"email\"));\r\n//                // create a object for getting contact data from JSONObject\r\n//                JSONObject contact = userDetail.getJSONObject(\"contact\");\r\n//                // fetch mobile number and store it in arraylist\r\n//                mobileNumbers.add(contact.getString(\"mobile\"));\r\n//            }\r\n//        } catch (JSONException e) {\r\n//            e.printStackTrace();\r\n//        }\r\n\r\n/*\r\n        foodList = new ArrayList<>();\r\n\r\n        try {\r\n            InputStream inputStream = getAssets().open(\"vegetablesv1.xml\");\r\n            XmlPullParserFactory parserFactory = XmlPullParserFactory.newInstance();\r\n            XmlPullParser parser = parserFactory.newPullParser();\r\n            parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES,false);\r\n            parser.setInput(inputStream,null);\r\n            String tag = \"\" , text = \"\";\r\n            int event = parser.getEventType();\r\n            while (event!= XmlPullParser.END_DOCUMENT){\r\n                tag = parser.getName();\r\n                switch (event) {\r\n                    case XmlPullParser.START_TAG:\r\n                        if(tag.equals(\"Food\"))\r\n                            foods = new Food();\r\n                        break;\r\n                    case XmlPullParser.TEXT:\r\n                        text=parser.getText();\r\n                        break;\r\n                    case XmlPullParser.END_TAG:\r\n                        switch (tag) {\r\n                            case \"name\": foods.setName(text);\r\n                                break;\r\n                            case \"image\": foods.setImageURL(text);\r\n                                imageURI = getResources().getIdentifier(text, \"drawable\", getPackageName());\r\n                                foods.setImage(imageURI);\r\n                                break;\r\n                            case \"type\": foods.setType(text);\r\n                                if(text.equals(\"vegetable\")) {\r\n                                    vegetable++;\r\n                                }\r\n                                if(text.equals(\"fruit\")) {\r\n                                    fruit++;\r\n                                }\r\n                                if(text.equals(\"meat\")) {\r\n                                    meat++;\r\n                                }\r\n                                break;\r\n                            case \"Food\":\r\n                                if(foods!=null)\r\n                                    foodList.add(foods);\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                event = parser.next();\r\n            }\r\n        }\r\n        catch (IOException e) {\r\n            e.printStackTrace();\r\n        } catch (XmlPullParserException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        recyclerView = findViewById(R.id.recycler_search);\r\n        myAdapter = new MyAdapter(this, foodList);\r\n        recyclerView.setAdapter(myAdapter);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n\r\n\r\n        //request for get intent when search button is tapped\r\n        if (getIntent().hasExtra(\"com.example.test.SOMETHING\")) {\r\n            TextView tv =  (TextView) findViewById(R.id.textView);\r\n            String text = getIntent().getExtras().getString(\"com.example.test.SOMETHING\");\r\n\r\n        }\r\n    }\r\n\r\n    // search function\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.search_menu, menu);\r\n        MenuItem item = menu.findItem(R.id.action_search);\r\n        SearchView searchView = (SearchView) item.getActionView();\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                    myAdapter.getFilter().filter(newText);\r\n                return false;\r\n            }\r\n        });\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    // override the transition going back in an activity\r\n    @Override\r\n    public void finish() {\r\n        super.finish();\r\n\r\n        overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right);\r\n\r\n\r\n */\r\n    /*\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        if(ref != null) {\r\n            ref.addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    if(dataSnapshot.exists()) {\r\n                        list = new ArrayList<>();\r\n                        for(DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                            list.add(ds.getValue(FoodItem.class));\r\n                        }\r\n\r\n                        searchAdapter = new SearchAdapter(list);\r\n                        recyclerView.setAdapter(searchAdapter);\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n        if(searchView != null) {\r\n            searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n                @Override\r\n                public boolean onQueryTextSubmit(String query) {\r\n                    return false;\r\n                }\r\n\r\n                @Override\r\n                public boolean onQueryTextChange(String newText) {\r\n                    search(newText);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private void search(String str) {\r\n        ArrayList<FoodItem> myFoods = new ArrayList<>();\r\n        for(FoodItem obj : list) {\r\n            if (obj.getTitle().toLowerCase().contains(str.toLowerCase())) {\r\n                myFoods.add(obj);\r\n            }\r\n            SearchAdapter searchList = new SearchAdapter(myFoods);\r\n            recyclerView.setAdapter(searchList);\r\n        }\r\n    }\r\n\r\n    //    public String loadJSONFromAsset() {\r\n//        String json = null;\r\n//        try {\r\n//            InputStream is = getAssets().open(\"vegetablesv1.json\");\r\n//            int size = is.available();\r\n//            byte[] buffer = new byte[size];\r\n//            is.read(buffer);\r\n//            is.close();\r\n//            json = new String(buffer, \"UTF-8\");\r\n//        } catch (IOException ex) {\r\n//            ex.printStackTrace();\r\n//            return null;\r\n//        }\r\n//        return json;\r\n//    }\r\n*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/food_preserver/SearchActivity.java	(revision 9bbfd79837bbea1354fa6862120488284301c041)
+++ app/src/main/java/com/example/food_preserver/SearchActivity.java	(date 1603751314453)
@@ -1,55 +1,32 @@
 package com.example.food_preserver;
-import android.content.Context;
+
 import android.os.Bundle;
-import android.text.Editable;
-import android.text.TextWatcher;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
-import android.widget.EditText;
-import android.widget.Filterable;
 import android.widget.TextView;
 
-import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.SearchView;
-import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.firebase.ui.firestore.FirestoreRecyclerOptions;
-import com.google.android.gms.common.api.Api;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.ValueEventListener;
 import com.google.firebase.firestore.CollectionReference;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.Query;
-import com.google.firebase.firestore.auth.FirebaseAuthCredentialsProvider;
 
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-import org.xmlpull.v1.XmlPullParser;
-import org.xmlpull.v1.XmlPullParserException;
-import org.xmlpull.v1.XmlPullParserFactory;
-
-import java.io.IOException;
-import java.io.InputStream;
 import java.util.ArrayList;
-import java.util.List;
 
 public class SearchActivity extends AppCompatActivity {
 
-    RecyclerView recyclerView;
-    SearchView searchView;
     private final FirebaseFirestore db = FirebaseFirestore.getInstance();
     private final CollectionReference FruitRef = db.collection("Food 2.0");
+    RecyclerView recyclerView;
+    String userInput = "";
+    ArrayList<String> input = new ArrayList<>();
     private FoodAdapter adapter;
 
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -57,7 +34,7 @@
 
         //request for get intent when search button is tapped
         if (getIntent().hasExtra("com.example.test.SOMETHING")) {
-            TextView tv =  (TextView) findViewById(R.id.textView);
+            TextView tv = findViewById(R.id.textView);
             String text = getIntent().getExtras().getString("com.example.test.SOMETHING");
         }
 
@@ -66,11 +43,26 @@
                 .setQuery(query, FoodItem.class)
                 .build();
 
-
         recyclerView = findViewById(R.id.recycler_search);
         adapter = new FoodAdapter(options);
         recyclerView.setAdapter(adapter);
         recyclerView.setLayoutManager(new LinearLayoutManager(this));
+    }
+
+    private void displaySearch() {
+        input.add(userInput);
+        if (!(userInput.equals(""))) {
+            Query query = FruitRef.whereIn("title", input).orderBy("priority", Query.Direction.ASCENDING);
+            FirestoreRecyclerOptions<FoodItem> options = new FirestoreRecyclerOptions.Builder<FoodItem>()
+                    .setQuery(query, FoodItem.class)
+                    .build();
+
+            recyclerView = findViewById(R.id.recycler_search);
+            adapter = new FoodAdapter(options);
+            recyclerView.setAdapter(adapter);
+            recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        }
+        Log.d("myTag", userInput + "Noob"); //line to be remove later lollollololol
     }
 
     @Override
@@ -81,8 +73,10 @@
 
     @Override
     protected void onStop() {
-        super.onStop();
-        adapter.stopListening();
+        if (!input.isEmpty()) {
+            super.onStop();
+            adapter.stopListening();
+        }
     }
 
     // override the transition going back in an activity
@@ -100,26 +94,28 @@
         MenuItem item = menu.findItem(R.id.action_search);
         SearchView searchView = (SearchView) item.getActionView();
         searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
+
             @Override
             public boolean onQueryTextSubmit(String query) {
+                userInput = query;
                 return false;
             }
 
             @Override
             public boolean onQueryTextChange(String newText) {
-
+                userInput = newText;
                 return false;
             }
         });
         return super.onCreateOptionsMenu(menu);
     }
 
-
-
-
-
-
-    //private final FirebaseFirestore db = FirebaseFirestore.getInstance();
+    @Override
+    public void onOptionsMenuClosed(Menu menu) {
+        super.onOptionsMenuClosed(menu);
+        displaySearch();
+    }
+//private final FirebaseFirestore db = FirebaseFirestore.getInstance();
     //CollectionReference FoodRef = db.collection("Food");
 
     //global variables for recyclerview
@@ -180,7 +176,7 @@
 //            }
 //        });
 
-                //to import the data from josn to firestore
+    //to import the data from josn to firestore
 //        try {
 //            // get JSONObject from JSON file
 //            JSONObject obj = new JSONObject(loadJSONFromAsset());
Index: app/src/main/java/com/example/food_preserver/FourthFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.food_preserver;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.firebase.ui.firestore.FirestoreRecyclerOptions;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\n\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link FourthFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class FourthFragment extends Fragment {\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n    private final FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private final CollectionReference FruitRef = db.collection(\"Food 2.0\");\r\n    private FoodAdapter adapter;\r\n    ArrayList<String> favourites = new ArrayList<>();\r\n    RecyclerView recyclerView;\r\n    LayoutInflater globalInflater;\r\n    ViewGroup globalContainer;\r\n    Bundle globalSavedInstanceState;\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n\r\n    public FourthFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment fourthFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static FourthFragment newInstance(String param1, String param2) {\r\n        FourthFragment fragment = new FourthFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n\r\n        //load in TinyDB (The sharedPreferences life saver of the gods)\r\n        final TinyDB tinydb = new TinyDB(getActivity());\r\n        favourites = tinydb.getListString(\"allFavourites\");\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        //initialize global variables\r\n        globalInflater = inflater;\r\n        globalContainer = container;\r\n        globalSavedInstanceState = savedInstanceState;\r\n\r\n        //printing out list of favourited items in Debug Logcat under tag \"myTag\"\r\n        Log.d(\"myTag\", Arrays.toString(favourites.toArray()) + \"Noob\"); //line to be remove later lollollololol\r\n\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_first, container, false);\r\n\r\n        if (!favourites.isEmpty()) {\r\n            //create query and succ out favourites from favourites arraylist brought to you by tinyDB\r\n            Query query = FruitRef.whereIn(\"title\", favourites).orderBy(\"priority\", Query.Direction.ASCENDING);\r\n\r\n            //display all the goodness into the favourites tab\r\n            FirestoreRecyclerOptions<FoodItem> options = new FirestoreRecyclerOptions.Builder<FoodItem>()\r\n                    .setQuery(query, FoodItem.class)\r\n                    .build();\r\n\r\n            recyclerView = view.findViewById(R.id.recyclerView_FirstFragment);\r\n            adapter = new FoodAdapter(options);\r\n            recyclerView.setAdapter(adapter);\r\n            recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n            //On click listener for items\r\n            adapter.setOnItemClickListener(new FoodAdapter.OnItemClickListener() {\r\n                @Override\r\n                public void onItemClick(DocumentSnapshot documentSnapshot, int position) {\r\n                    FoodItem food = documentSnapshot.toObject(FoodItem.class);\r\n                    String id = documentSnapshot.getId();\r\n                    String path = documentSnapshot.getReference().getPath();\r\n                    Toast.makeText(getActivity(),\r\n                            \"Position: \" + position + \" ID: \" + id, Toast.LENGTH_SHORT).show();\r\n\r\n                    // Code for implementing new activity using the document ID\r\n                    Bundle bundle = new Bundle();\r\n                    bundle.putString(\"id\", id);\r\n                    bundle.putString(\"path\", path);\r\n                    bundle.putParcelable(\"food\", food);\r\n\r\n                    // sends data to the foodItemInstruction class\r\n                    Intent intent = new Intent(getContext(), FoodItemInstructions.class);\r\n                    intent.putExtra(\"id\", id);\r\n                    intent.putExtra(\"food\", food);\r\n                    startActivity(intent);\r\n\r\n                    // sends data to the canning fragment class\r\n                    Intent intent2 = new Intent(getContext(), canningFragment.class);\r\n                    intent2.putExtra(\"id\", id);\r\n                    intent2.putExtra(\"food\", food);\r\n\r\n                    // override the transition for each activity\r\n                    requireActivity().overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);\r\n                }\r\n            });\r\n        }\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        if (!favourites.isEmpty()) {\r\n            adapter.startListening();\r\n            onCreate(globalSavedInstanceState);\r\n            onCreateView(globalInflater, globalContainer, globalSavedInstanceState);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (!favourites.isEmpty()) {\r\n            adapter.stopListening();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/food_preserver/FourthFragment.java	(revision 9bbfd79837bbea1354fa6862120488284301c041)
+++ app/src/main/java/com/example/food_preserver/FourthFragment.java	(date 1603909534864)
@@ -34,13 +34,12 @@
     private static final String ARG_PARAM2 = "param2";
     private final FirebaseFirestore db = FirebaseFirestore.getInstance();
     private final CollectionReference FruitRef = db.collection("Food 2.0");
-    private FoodAdapter adapter;
     ArrayList<String> favourites = new ArrayList<>();
     RecyclerView recyclerView;
     LayoutInflater globalInflater;
     ViewGroup globalContainer;
     Bundle globalSavedInstanceState;
-
+    private FoodAdapter adapter;
     // TODO: Rename and change types of parameters
     private String mParam1;
     private String mParam2;
@@ -150,8 +149,10 @@
         super.onStart();
         if (!favourites.isEmpty()) {
             adapter.startListening();
-            onCreate(globalSavedInstanceState);
-            onCreateView(globalInflater, globalContainer, globalSavedInstanceState);
+//            adapter.onDataChanged();
+//            adapter.notifyDataSetChanged();
+//            onCreate(globalSavedInstanceState);
+//            onCreateView(globalInflater, globalContainer, globalSavedInstanceState);
         }
     }
 
